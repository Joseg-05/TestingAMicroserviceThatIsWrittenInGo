version: '3'
services:
  auth:
    container_name: auth
    build:
      context: ./backend/authservice
      dockerfile: Dockerfile
    environment:
      PORT: 8080
      POSTGRES_USER: postgres
      HOST: dbauth
      DB_PORT: 5432
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth
      JWT_SECRET: thisisajwtsecretbrod
    ports:
      - "8002:8080" 
    tty: true
    networks: 
      - db
    depends_on:
      dbauth: 
        condition: service_healthy
    restart: unless-stopped
  dbauth:
    container_name: dbauth
    image: postgres:15.3 # Use the official PostgreSQL image
    ports:
      - "8003:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password 
      POSTGRES_DB: auth
      GORM_HOST: DB
    networks:
      - db
    volumes:
      - auth_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  gateway:
    container_name: gateway
    build:
      context: ./backend/apigateway
      dockerfile: Dockerfile
    environment:
      PORT: 8080
      PRESCRIPTION_MICRO: 8000
      RX_HISTORY_MICRO: 8006
      AUTH_MICRO: 8002
      JWT_SECRET: thisisajwtsecretbrod
      HOST_IP: host.docker.internal
    ports:
      - "8004:8080" 
    tty: true
    restart: unless-stopped

networks:
  db:
    driver: bridge

volumes:
  auth_data:
    driver: local